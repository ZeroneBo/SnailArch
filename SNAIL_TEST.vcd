$date
	Tue Jun 15 18:18:59 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module SNAIL_TEST $end
$var wire 8 ! ram_addr [7:0] $end
$var wire 8 " ram_in [7:0] $end
$var wire 8 # ram_out [7:0] $end
$var wire 1 $ rd_ $end
$var wire 8 % rom_addr [7:0] $end
$var wire 24 & rom_out [23:0] $end
$var wire 1 ' wr_ $end
$var reg 1 ( clk $end
$var integer 32 ) i [31:0] $end
$var reg 1 * rst_ $end
$scope module ram $end
$var wire 8 + addr [7:0] $end
$var wire 1 , clk $end
$var wire 8 - in [7:0] $end
$var wire 8 . out [7:0] $end
$var wire 1 $ rd_ $end
$var wire 1 ' wr_ $end
$upscope $end
$scope module rom $end
$var wire 8 / addr [7:0] $end
$var wire 24 0 out [23:0] $end
$upscope $end
$scope module cpu $end
$var wire 8 1 aluA [7:0] $end
$var wire 8 2 aluB [7:0] $end
$var wire 2 3 cc [1:0] $end
$var wire 1 , clk $end
$var wire 3 4 dstE [2:0] $end
$var wire 3 5 dstM [2:0] $end
$var wire 8 6 new_PC [7:0] $end
$var wire 3 7 rA [2:0] $end
$var wire 3 8 rB [2:0] $end
$var wire 3 9 rC [2:0] $end
$var wire 8 : ram_addr [7:0] $end
$var wire 1 $ ram_rd_ $end
$var wire 8 ; ram_rdat [7:0] $end
$var wire 8 < ram_wdat [7:0] $end
$var wire 1 ' ram_wr_ $end
$var wire 8 = rom_addr [7:0] $end
$var wire 24 > rom_data [23:0] $end
$var wire 1 ? rst_ $end
$var wire 8 @ valA [7:0] $end
$var wire 8 A valB [7:0] $end
$var wire 8 B valC [7:0] $end
$var wire 8 C valE [7:0] $end
$var wire 8 D valM [7:0] $end
$var wire 8 E valP [7:0] $end
$scope module pc $end
$var wire 1 , clk $end
$var wire 8 F new_PC [7:0] $end
$var wire 1 ? rst_ $end
$var reg 8 G PC [7:0] $end
$upscope $end
$scope module regfile $end
$var wire 8 H A [7:0] $end
$var wire 8 I B [7:0] $end
$var wire 8 J E [7:0] $end
$var wire 8 K M [7:0] $end
$var wire 1 , clk $end
$var wire 3 L dstE [2:0] $end
$var wire 3 M dstM [2:0] $end
$var wire 3 N srcA [2:0] $end
$var wire 3 O srcB [2:0] $end
$upscope $end
$scope module alu $end
$var wire 8 P A [7:0] $end
$var wire 8 Q B [7:0] $end
$var wire 8 R E [7:0] $end
$var wire 2 S cc [1:0] $end
$var wire 4 T op [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 T
b0 S
b110000 R
b110000 Q
b0 P
b111 O
b0 N
b0 M
b111 L
bx K
b110000 J
bx I
b0 H
b0 G
b11 F
b11 E
bx D
b110000 C
b110000 B
bx A
b0 @
0?
b10000000000011100110000 >
b0 =
bx <
bx ;
b110000 :
b11 9
b111 8
b0 7
b11 6
b0 5
b111 4
b0 3
b110000 2
b0 1
b10000000000011100110000 0
b0 /
bx .
bx -
1,
b110000 +
0*
bx )
1(
1'
b10000000000011100110000 &
b0 %
1$
bx #
bx "
b110000 !
$end
#5
b1 )
0(
0,
#10
b110000 "
b110000 -
b110000 <
b110000 A
b110000 I
1(
1,
#15
b1 )
0(
0,
1*
1?
#20
b1 !
b1 +
b1 :
b1 4
b1 L
bx "
bx -
bx <
b1 C
b1 J
b1 R
b110 6
b110 F
b1 2
b1 Q
bx A
bx I
b1 B
b1 8
b1 O
b110 E
b0 9
b11 G
b10000000000000100000001 &
b10000000000000100000001 0
b10000000000000100000001 >
b11 %
b11 /
b11 =
1(
1,
#25
b1 )
0(
0,
#30
b101111 !
b101111 +
b101111 :
b110000 2
b110000 Q
b101111 C
b101111 J
b101111 R
0'
b111 4
b111 L
b1000 6
b1000 F
b1 @
b1 H
b1 3
b1 S
b11111111 1
b11111111 P
b1110000 B
b1 7
b1 N
b111 8
b111 O
b1 "
b1 -
b1 <
b110000 A
b110000 I
b1000 E
b111 9
b110 G
b11000000001000001110000 &
b11000000001000001110000 0
b11000000001000001110000 >
b110 %
b110 /
b110 =
1(
1,
#35
b1 )
0(
0,
#40
b1 D
b1 K
b1 #
b1 .
b1 ;
1'
b110000 C
b110000 J
b110000 R
b1010 6
b1010 F
bx @
bx H
b0 3
b0 S
b1 1
b1 P
0$
b101111 2
b101111 Q
b100000 B
b10 7
b10 N
b101111 "
b101111 -
b101111 <
b10 5
b10 M
b101111 A
b101111 I
b1010 E
b10 9
b1000 G
b11100000010000000100000 &
b11100000010000000100000 0
b11100000010000000100000 >
b1000 %
b1000 /
b1000 =
1(
1,
#45
b1 )
0(
0,
#50
b0 1
b0 P
b10 3
b10 S
bx D
bx K
bx #
bx .
bx ;
0'
b1 "
b1 -
b1 <
b0 C
b0 J
b0 R
b1101 6
b1101 F
b1 8
b1 O
b0 !
b0 +
b0 :
1$
b0 4
b0 L
b0 2
b0 Q
b0 B
b0 7
b0 N
b0 5
b0 M
b1 A
b1 I
b0 @
b0 H
b1101 E
b0 9
b1010 G
b1000000000000100000000 &
b1000000000000100000000 0
b1000000000000100000000 >
b1010 %
b1010 /
b1010 =
1(
1,
#55
b1 )
0(
0,
#60
b110000 !
b110000 +
b110000 :
b110000 C
b110000 J
b110000 R
b1 3
b1 S
b110000 1
b110000 P
b0 "
b0 -
b0 <
1'
b1110 6
b1110 F
b110000 @
b110000 H
b0 A
b0 I
bx B
b111 7
b111 N
b0 8
b0 O
b1110 E
bx 9
b1101 G
b11110000xxxxxxxx &
b11110000xxxxxxxx 0
b11110000xxxxxxxx >
b1101 %
b1101 /
b1101 =
1(
1,
#65
b1 )
0(
0,
#70
bx !
bx +
bx :
bx 1
bx P
bx "
bx -
bx <
bx C
bx J
bx R
bx 3
bx S
bx 2
bx Q
b1110 6
b1110 F
bx @
bx H
bx A
bx I
bx 7
bx N
bx 8
bx O
b1110 E
b1110 G
b11110000xxxxxxxxxxxxxxxx &
b11110000xxxxxxxxxxxxxxxx 0
b11110000xxxxxxxxxxxxxxxx >
b1110 %
b1110 /
b1110 =
1(
1,
#75
0(
0,
#80
1(
1,
#85
0(
0,
#86
